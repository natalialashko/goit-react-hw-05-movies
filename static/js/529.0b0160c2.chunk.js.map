{"version":3,"file":"static/js/529.0b0160c2.chunk.js","mappings":"qLAkDA,UA/CgB,WAAO,IAAD,EACdA,GAASC,EAAAA,EAAAA,MACf,GAA0CC,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KA2BA,OA1BAC,QAAQC,IAAI,oBAAqBN,EAAOO,WACxCC,EAAAA,EAAAA,YAAU,WAURC,MAAM,sCAAD,OACmCT,EAAOO,SAD1C,kCATW,CACdG,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,gOAQHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAC,GACJV,QAAQC,IAAIS,GACZX,EAAiBW,EAClB,IACAE,OAAM,SAAAC,GAAG,OAAIb,QAAQc,MAAMD,EAAlB,GACb,GAAE,CAAClB,EAAOO,WAEXF,QAAQC,IAAI,kCAAmCH,EAAciB,eAC7Df,QAAQC,IAAI,oBAAqBH,GACjCE,QAAQC,IAAI,4BAA6BH,EAAckB,UAErD,yBACGlB,EAAciB,cAAc,GAC3B,+BACGjB,QADH,IACGA,GADH,UACGA,EAAekB,eADlB,aACG,EAAwBC,KAAI,SAAAC,GAAQ,OACnC,2BACE,qCAAaA,EAASC,OAAtB,QACA,yBAAID,EAASE,QAAb,SAFOF,EAASG,GADiB,OAQvC,uEAIP,C","sources":["components/MoviesDetails/Reviews.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const params = useParams();\n  const [reviewsMovies, setReviewsMovies] = useState([]);\n  console.log('params  Reviews>>', params.moviesId);\n  useEffect(() => {\n    const options = {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        Authorization:\n          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMmJmNDU3NGU0NmM4MDU0ZjVmMDkyZmQ2NGQzMWIzZiIsInN1YiI6IjY0MzcwNGQwMWY3NDhiMDA3NzE1NGVkZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.WJVw4SC0wxekMACd_HjNy4-mtG2EpEBFxroutosJfJc',\n      },\n    };\n\n    fetch(\n      `https://api.themoviedb.org/3/movie/${params.moviesId}/reviews?language=en-US&page=1`,\n      options\n    )\n      .then(response => response.json())\n      .then(response => {\n        console.log(response);\n        setReviewsMovies(response);\n      })\n      .catch(err => console.error(err));\n  }, [params.moviesId]);\n\n  console.log('reviewsMovies.total_results  >>', reviewsMovies.total_results);\n  console.log('reviewsMovies  >>', reviewsMovies);\n  console.log('reviewsMovies.results  >>', reviewsMovies.results);\n  return (\n    <div>\n      {reviewsMovies.total_results>0 ? \n        <ul>\n          {reviewsMovies?.results?.map(ellArray => (\n            <li key={ellArray.id}>\n              <h2>Author: {ellArray.author} </h2>\n              <p>{ellArray.content} </p>\n            </li>\n          ))}\n        </ul>\n       : \n        <p> We don't have any reviews for this movie </p>\n      }\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["params","useParams","useState","reviewsMovies","setReviewsMovies","console","log","moviesId","useEffect","fetch","method","headers","accept","Authorization","then","response","json","catch","err","error","total_results","results","map","ellArray","author","content","id"],"sourceRoot":""}